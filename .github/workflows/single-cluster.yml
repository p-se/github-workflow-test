name: E2E Single-Cluster Telemetry

on:
  workflow_dispatch:
  # schedule:
  #   # Run everyday day at 9:00 AM
  #   - cron: '0 9 * * *'
  # workflow_dispatch:
  #   inputs:
  #     enable_tmate:
  #       description: 'Enable debugging via tmate'
  #       required: false
  #       default: 'false'
  pull_request:
    paths-ignore:
      - 'scripts/**'
      - '*.md'
  push:
    branches:
      - 'release/*"'

env:
  GOARCH: amd64
  CGO_ENABLED: 0
  SETUP_GO_VERSION: '^1.19'
  HOST_NAME: foo  # for `start` script
  TOKEN: ${{ secrets.TOKEN }}

jobs:

  e2e-telemetry-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: main

      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.SETUP_GO_VERSION }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Ginkgo CLI
        run: go install github.com/onsi/ginkgo/v2/ginkgo@v2.1

      - name: Install HTTP testing tool
        run: |
          # apt update && apt install httpie
          pip install httpie

      - name: Build Binaries
        run: |
          cd main
          go build -o bin/hello-${{ env.GOARCH }} -x -v .


      - name: Provision k3d Cluster
        uses: AbsaOSS/k3d-action@v2
        with:
          cluster-name: telemetry-host
          args: >-
            --api-port 6443
            --network "nw01"

      - uses: actions/checkout@v3
        with:
          repository: p-se/rancher-telemetry-devel
          path: telemetry-devel

      - name: Install Rancher
        run: |
          cd telemetry-devel
          source ./start && install-rancher

          for i in {0..5}; do
            ip=$(
              kubectl get -A ingress -o json |
                jq -r '.items[0].status.loadBalancer.ingress[0].ip'
            )

            if http --check-status --verify=no GET "https://${ip}" Host:${HOST_NAME} ; then
              >&2 echo "Rancher installation verified successfully"
              exit 0
            fi
          done

          >&2 echo "Rancher installation test failed"
          exit 1

      - name: Install PostgreSQL
        run: |
          cd telemetry-devel
          source ./start && install-postgres

      - name: Install Telemetry Server
        run: |
          cd telemetry-devel
          source ./start && install-telemetry-server

      - name: Install Telemetry Client
        run: |
          cd telemetry-devel
          source ./start && install-telemetry-client

      - name: Install InfluxDB
        run: |
          cd telemetry-devel
          source ./start && install-influx

      - name: Configure Rancher
        run: |
          cd telemetry-devel
          source ./start
          CLUSTER_IP=$(get-cluster-ip)
          init-base "admin"

      - name: Build Docker images
        run: ''

      - name: Upload Docker images
        run: ''
